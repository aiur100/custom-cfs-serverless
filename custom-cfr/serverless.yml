service: custom-resource
frameworkVersion: '2'

plugins:
  - serverless-iam-roles-per-function

custom: 
  forceResourceRun: ${file(./config.js):fetchRandomKey}
  apiName: "TulsaWeatherApp"
  weatherApiArn: arn:aws:lambda:us-east-1:#{AWS::AccountId}:function:${self:service}-${opt:stage, self:provider.stage}-${self:custom.apiName}

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    API_NAME: ${self:custom.apiName}
    STAGE: ${opt:stage, self:provider.stage}

functions:
  deployProject:
    handler: lambdas/deployProject.handler
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - apigateway:*
        Resource: 
          - "*"
      - Effect: "Allow"
        Action:
          - iam:GetRole
          - iam:PassRole
        Resource:
        - Fn::GetAtt:
            - ApigAwsProxyRole
            - Arn
        #Resource: "arn:aws:apigateway:${self:provider.region}::/restapis/${self:custom.awsAccountId}/*"
  weatherApi:
    handler: lambdas/weatherApi.handler

resources:
  Resources:
    #This CF Custom Resource Deploys the entire project
    DeployProjectResource:
      Type: Custom::DeployProjectResource
      Properties:
        ForceRun: ${self:custom.forceResourceRun}
        ApiName: ${self:custom.apiName}
        Stage: ${opt:stage, self:provider.stage}
        ApiArn: 
          Fn::GetAtt:
            - WeatherApiLambdaFunction 
            - Arn
        ApiRole:
          Fn::GetAtt:
            - ApigAwsProxyRole
            - Arn
        ServiceToken:
          Fn::GetAtt:
            - DeployProjectLambdaFunction 
            - Arn
    ApiInvokeFunctionPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "lambda:InvokeFunction"
              Resource:
                - "*"
    ApigAwsProxyRole:
      Type: AWS::IAM::Role
      Description: "Used to give the API GW access to a Lambda Function"
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: 
                - "sts:AssumeRole"
              Principal:
                Service: "apigateway.amazonaws.com"
        ManagedPolicyArns:
          - !Ref ApiInvokeFunctionPolicy
