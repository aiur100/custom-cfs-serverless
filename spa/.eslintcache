[{"/Users/thecaptain/code/voice-foundry-weather/spa/src/index.js":"1","/Users/thecaptain/code/voice-foundry-weather/spa/src/App.js":"2","/Users/thecaptain/code/voice-foundry-weather/spa/src/reportWebVitals.js":"3","/Users/thecaptain/code/voice-foundry-weather/spa/src/components/Weather/Weather.js":"4","/Users/thecaptain/code/voice-foundry-weather/spa/src/components/Condition/Condition.js":"5","/Users/thecaptain/code/voice-foundry-weather/spa/src/components/Condition/ConditionDetails.js":"6"},{"size":500,"mtime":1609700350351,"results":"7","hashOfConfig":"8"},{"size":510,"mtime":1609765139751,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609700350352,"results":"10","hashOfConfig":"8"},{"size":1462,"mtime":1609764560946,"results":"11","hashOfConfig":"8"},{"size":298,"mtime":1609763166455,"results":"12","hashOfConfig":"8"},{"size":1318,"mtime":1609765426798,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"2a4frs",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/thecaptain/code/voice-foundry-weather/spa/src/index.js",[],["30","31"],"/Users/thecaptain/code/voice-foundry-weather/spa/src/App.js",["32"],"import logo from './logo.svg';\nimport './App.css';\nimport Weather from \"./components/Weather/Weather.js\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"centerItem\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h1>Tulsa Weather</h1>\n                <hr/>\n                <Weather/>\n              </div>\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/thecaptain/code/voice-foundry-weather/spa/src/reportWebVitals.js",[],"/Users/thecaptain/code/voice-foundry-weather/spa/src/components/Weather/Weather.js",["33"],"import React,{ useState,useEffect } from 'react';\nimport Condition from \"./../Condition/Condition.js\"; \nimport ConditionDetails from \"./../Condition/ConditionDetails.js\";\n\nconst Weather = () => {\n\n    let [ weatherResponse,  setWeatherResponse ] = useState({});\n\n    function getWeather() {\n        fetch(process.env.REACT_APP_API_URL)\n                .then(r => r.json())\n                .then(r => setWeatherResponse(r) )\n                .catch(error => console.error(error))\n                .finally(() => console.log(\"getWeather()\",weatherResponse));\n    }\n\n    function getWeatherIcons(){\n        const defaultResponse = [];\n        if(!weatherResponse.weatherData)\n            return defaultResponse;\n        if(!weatherResponse.weatherData.weather)\n            return defaultResponse;\n        if(!Array.isArray(weatherResponse.weatherData.weather) || \n            !weatherResponse.weatherData.weather.length > 0)\n            return defaultResponse;\n        return weatherResponse.weatherData.weather.map(w => {\n            return w.icon; \n        });\n    }\n\n    useEffect(() => {\n        getWeather();\n    },[]);\n\n    return (\n        <div className=\"row\">\n            {getWeatherIcons().map(icon => {\n                return <Condition condition={icon} />\n            })}\n            <div class=\"col-lg-12\">\n                <ConditionDetails weather={weatherResponse.weatherData?.main} />\n            </div>\n        </div>\n    )\n}\n\nexport default Weather;","/Users/thecaptain/code/voice-foundry-weather/spa/src/components/Condition/Condition.js",["34"],"import React from 'react';\n\nconst Condition = (props) => {\n    function imgUrl(){\n        return `http://openweathermap.org/img/wn/${props.condition}@4x.png`\n    }\n    return (\n        <div className=\"centerItem\"> \n            <img src={imgUrl()}/>\n        </div>\n    )\n}\n\nexport default Condition;","/Users/thecaptain/code/voice-foundry-weather/spa/src/components/Condition/ConditionDetails.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"43","severity":1,"message":"44","line":33,"column":7,"nodeType":"45","endLine":33,"endColumn":9,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":9,"column":13,"nodeType":"49","endLine":9,"endColumn":34},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.","ArrayExpression",["52"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [getWeather]",{"range":"55","text":"56"},[1115,1117],"[getWeather]"]